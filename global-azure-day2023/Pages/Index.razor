@page "/"
@using global_azure_day2023.Model.Shared.Extensions;
@using global_azure_day2023.Model.Shared.Models;
@inject HttpClient Http;

<PageTitle>Index</PageTitle>

<h1>Global Azure Bootcamp 2023 - Pune</h1>

<div class="col community-contents">
    <p>
        <a href="https://www.meetup.com/Pune-Tech-Community/events/285099113/">
            <img src="/img/punetechcommunity.png" class="img-fluid" height="200px" width="200px"
                 alt="Global Azure Bootcamp 2023 - Pune" title="Global Azure Bootcamp 2023 - Pune registration">
        </a>
    </p>
    <h2 id="we-are-calling-all-azure-enthusiasts-to-come-and-join-us-where-we-share-our-expertise-and-experience">We are calling all Azure enthusiasts to come and join us, where we share our expertise and experience.</h2>
    <p>Hosted by <a href="https://www.meetup.com/Pune-Tech-Community/">Pune Tech Community</a>.</p>
    <p>All our events are free for all attendees. We are committed to your privacy, and your data will never be shared.</p>

</div>


<h2 style="color:blue;font-weight:bold;">Session Details</h2>
<table class='table table-striped' aria-labelledby="tableLabel">
    <thead>
        <tr>
            <th>Session Name</th>
            <th>Speaker</th>
            <th>Date</th>
            <th>Time</th>
            <th>Slot</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var speaker in SpeakerList)
        {
            <tr>
                <td>@speaker.SessionName</td>
                <td>@speaker.SpeakerName</td>
                <td>@speaker.EventDate.ToShortDateString()</td>
                <td>@speaker.EventTime</td>
                <td>@speaker.SlotName</td>
               
            </tr>
        }
    </tbody>
</table>

@code
{
    public List<Speaker> SpeakerList { get; set; } = new List<Speaker>();

    protected override async Task OnInitializedAsync()
    {
        await GetDevelopers();
    }

    private async Task GetDevelopers()
    {        
        
        //List<Speaker> speakers = await Http.GetFromJsonAsync<List<Speaker>>("data/events.json");

        // http://localhost:7044/api/GetSessions
        List<Speaker> speakers = await Http.GetFromJsonAsync<List<Speaker>>("/api/GetSessions");
        SpeakerList = speakers.Shuffle<Speaker>().ToList();
    }
}